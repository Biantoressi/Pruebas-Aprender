library(ggplot2)
# Filtrar sólo 2019 y 2024
resumen_filtrado <- lengua_sector_largo %>%
filter(Año %in% c(2019, 2024)) %>%
mutate(
Año = factor(Año),
Desempeño = factor(
Desempeño,
levels = c("Bajo", "Básico", "Satisfactorio", "Avanzado")
)
)
library(ggplot2)
ggplot(
resumen_filtrado,
aes(
y = Desempeño,
x = Porcentaje,
fill = sector
)
) +
geom_col(
position = position_dodge(width = 0.7),
width = 0.6
) +
geom_text(
aes(label = sprintf("%.1f%%", Porcentaje)),
position = position_dodge(width = 0.7),
hjust = -0.1,
size = 3,
fontface = "bold"
) +
facet_wrap(~Año) +
scale_y_discrete(
limits = rev(c("Bajo", "Básico", "Satisfactorio", "Avanzado"))
) +
scale_fill_manual(
values = c(
"Estatal" = "#3949ab",
"Privado" = "#ff9800"
)
) +
labs(
title = "Desempeños de Lengua Estatal vs Privado",
x = "Porcentaje de estudiantes",
y = NULL,
fill = "Sector"
) +
theme(
panel.background = element_blank(),
plot.background = element_blank(),
panel.grid = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_blank(),
axis.text.y = element_text(face = "bold"),
legend.position = c(0.95, 0.5),
legend.background = element_rect(fill = alpha("white", 0.8), color = NA),
legend.text = element_text(size = 6),
legend.title = element_text(size = 7),
legend.key = element_blank(),
plot.title = element_text(size = 14, face = "bold")
) +
xlim(0, 100)
ggsave(file.path(output, "comparacion_estatal_privado.png"),
width = 8, height = 6, dpi = 300)
# Repetidores =============================
# Sumar los casos de repetición
datos_2019 <- datos_2019 %>%
mutate(
Repetidores = ap25_02_Si_una_vez + ap25_02_Si_dos_o_mas_veces + ap25_03_Si_una_vez + ap25_03_Si_dos_o_mas_veces,
Porcentaje_Repetidores = (Repetidores / Total_Alumnos) * 100
)
dplyr::select(
datos_2019,
jurisdiccion,
departamento,
Repetidores,
Total_Alumnos,
Porcentaje_Repetidores
) %>%
head(10)
# Crear variable de repetidores en 2024
datos_2024 <- datos_2024 %>%
mutate(
Repetidores = ap25b_Si_una_vez + ap25b_Si_dos_o_mas_veces + ap25c_Si_una_vez + ap25c_Si_dos_o_mas_veces,,
Porcentaje_Repetidores = Repetidores / Total_Alumnos * 100
)
# Crear variable Repetidores en 2022
datos_2022 <- datos_2022 %>%
mutate(
Repetidores = ap25b_Si_una_vez + ap25b_Si_dos_veces + ap25b_Si_tres_veces_o_mas + ap25c_Si_una_vez + ap25c_Si_dos_veces + ap25c_Si_tres_veces_o_mas,
Porcentaje_Repetidores = Repetidores / Total_Alumnos * 100
)
# 2019
resumen_2019 <- datos_2019 %>%
summarise(
Total_Repetidores = sum(Repetidores, na.rm = TRUE),
Total_Alumnos = sum(Total_Alumnos, na.rm = TRUE)
) %>%
mutate(
Año = 2019,
Porcentaje = Total_Repetidores / Total_Alumnos * 100
)
# 2022
resumen_2022 <- datos_2022 %>%
summarise(
Total_Repetidores = sum(Repetidores, na.rm = TRUE),
Total_Alumnos = sum(Total_Alumnos, na.rm = TRUE)
) %>%
mutate(
Año = 2022,
Porcentaje = Total_Repetidores / Total_Alumnos * 100
)
# 2024
resumen_2024 <- datos_2024 %>%
summarise(
Total_Repetidores = sum(Repetidores, na.rm = TRUE),
Total_Alumnos = sum(Total_Alumnos, na.rm = TRUE)
) %>%
mutate(
Año = 2024,
Porcentaje = Total_Repetidores / Total_Alumnos * 100
)
# Combinar todo y convertir en tibble
comparativo <- bind_rows(resumen_2019, resumen_2022, resumen_2024) %>%
tibble::as_tibble() %>%
dplyr::select(Año, Total_Repetidores, Total_Alumnos, Porcentaje)
# Ver resultado
print(comparativo)
library(ggplot2)
# Aseguramos que Año sea factor para el orden
comparativo$Año <- factor(comparativo$Año)
# Gráfico
ggplot(comparativo, aes(x = factor(Año), y = Porcentaje, fill = factor(Año))) +
geom_col(width = 0.6) +
geom_text(
aes(label = sprintf("%.1f%%", Porcentaje)),
vjust = -0.4,
size = 6,
fontface = "bold"
) +
scale_fill_manual(
values = c(
"2019" = "grey75",
"2022" = "#5DADE2",
"2024" = "#4682B4"
)
) +
scale_y_continuous(
limits = c(0, max(comparativo$Porcentaje) * 1.3),
expand = c(0, 0)
) +
labs(
title = "Evolución del porcentaje de repetidores",
x = NULL,
y = NULL,
fill = "Año"
) +
theme(
panel.background = element_blank(),
plot.background = element_blank(),
panel.grid = element_blank(),
axis.line.x = element_line(color = "black"),
axis.text.x = element_text(face = "bold"),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "none",
plot.title = element_text(size = 14, face = "bold")
)
ggsave(file.path(output, "comparacion_repetidores.png"),
width = 8, height = 6, dpi = 300)
#otros posibles graficos
library(ggplot2)
library(dplyr)
comparativo$Año <- factor(comparativo$Año)
#7. GRÁFICO COMBINADO (BARRAS + LÍNEA) ======
grafico_combinado <- ggplot(comparativo, aes(x = Año)) +
geom_col(aes(y = Porcentaje, fill = Año), width = 0.6, alpha = 0.7) +
geom_line(aes(y = Porcentaje, group = 1), color = "#E74C3C", size = 2) +
geom_point(aes(y = Porcentaje), color = "#E74C3C", size = 4) +
geom_text(
aes(y = Porcentaje, label = sprintf("%.1f%%", Porcentaje)),
vjust = -0.8,
size = 5,
fontface = "bold"
) +
scale_fill_manual(
values = c(
"2019" = "grey75",
"2022" = "#5DADE2",
"2024" = "#4682B4"
)
) +
scale_y_continuous(
limits = c(0, max(comparativo$Porcentaje) * 1.3),
expand = c(0, 0)
) +
labs(
title = "Evolución del porcentaje de repetidores",
subtitle = "Combinación de barras y línea de tendencia",
x = "Año",
y = "Porcentaje (%)"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12, color = "grey60"),
legend.position = "none",
axis.title = element_text(face = "bold"),
panel.grid.minor = element_blank()
)
print(grafico_combinado)
# Apoyo a estudiantes =======
# Recodificar variables (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
apoyo_data <- datos %>%
mutate(
seguimiento_pers = recode(ap42_04_Seguimiento,
"ap42_04_Nunca" = 0, "ap42_04_Algunas_veces" = 1,
"ap42_04_La_mayoria_de_las_veces" = 2, "ap42_04_Siempre" = 3),
clases_apoyo = recode(ap42_04_Clases_apoyo, ...),
adaptacion_clases = recode(ap42_04_Adaptacion, ...),
formas_evaluar = recode(ap42_04_Evaluacion, ...)
) %>%
mutate(
indice_apoyo = (seguimiento_pers + clases_apoyo + adaptacion_clases + formas_evaluar) / 4,
categoria_apoyo = case_when(
indice_apoyo <= 1 ~ "Bajo apoyo",
indice_apoyo <= 2 ~ "Apoyo moderado",
indice_apoyo > 2 ~ "Alto apoyo"
)
)
# Apoyo a estudiantes =======
# Recodificar variables (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
apoyo_data_2019 <- datos_2019 %>%
mutate(
seguimiento_pers = recode(ap42_04_Seguimiento,
"ap42_04_Nunca" = 0, "ap42_04_Algunas_veces" = 1,
"ap42_04_La_mayoria_de_las_veces" = 2, "ap42_04_Siempre" = 3),
clases_apoyo = recode(ap42_04_Clases_apoyo, ...),
adaptacion_clases = recode(ap42_04_Adaptacion, ...),
formas_evaluar = recode(ap42_04_Evaluacion, ...)
) %>%
mutate(
indice_apoyo = (seguimiento_pers + clases_apoyo + adaptacion_clases + formas_evaluar) / 4,
categoria_apoyo = case_when(
indice_apoyo <= 1 ~ "Bajo apoyo",
indice_apoyo <= 2 ~ "Apoyo moderado",
indice_apoyo > 2 ~ "Alto apoyo"
)
)
names(datos_2019)[grepl("ap42", names(datos_2019))]
# Apoyo a estudiantes =======
library(stringr)
# Recodificar variables (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
mutate(
# Procesar cada pregunta ap42_XX
seguimiento_pers = case_when(
str_detect(ap42_01, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_01, "Nunca") ~ 0,
),
clases_apoyo = case_when(
str_detect(ap42_02, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_02, "Nunca") ~ 0,
),
adaptacion_clases = case_when(
str_detect(ap42_03, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_03, "Nunca") ~ 0,
),
formas_evaluar = case_when(
str_detect(ap42_04, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_04, "Nunca") ~ 0,
),
# Recodificar variables (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
apoyo_2019 <- datos_2019 %>%
# Recodificar variables (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
apoyo_2019 <- datos_2019 %>%
str_detect(ap42_01, "Siempre") ~ 3,
str_detect(ap42_01, "Algunas_veces") ~ 1,
TRUE ~ NA_real_
clases_apoyo = case_when(
str_detect(ap42_02, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_02, "Nunca") ~ 0,
# Recodificar variables (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
mutate(seguimiento_pers = case_when(
str_detect(ap42_01, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_01, "Nunca") ~ 0,
),
clases_apoyo = case_when(
str_detect(ap42_02, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_02, "Nunca") ~ 0,
),
adaptacion_clases = case_when(
str_detect(ap42_03, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_03, "Nunca") ~ 0,
),
formas_evaluar = case_when(
str_detect(ap42_04, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_04, "Nunca") ~ 0,
)
# Apoyo a estudiantes =======
library(stringr)
# Apoyo a estudiantes =======
library(stringr)
apoyo_2019 <- datos_2019 %>%
mutate(
# Procesar todas las variables ap42_XX de una vez
across(starts_with("ap42_"),
~ case_when(
str_detect(.x, "Siempre") ~ 3,
str_detect(.x, "La_mayoria_de_las_veces") ~ 2,
str_detect(.x, "Algunas_veces") ~ 1,
str_detect(.x, "Nunca") ~ 0,
TRUE ~ NA_real_
),
.names = "{.col}_num")
) %>%
mutate(
# Crear índice y categorías
indice_apoyo = (ap42_01_num + ap42_02_num + ap42_03_num + ap42_04_num) / 4,
categoria_apoyo = case_when(
indice_apoyo >= 2.5 ~ "Alto apoyo",
indice_apoyo >= 1.5 ~ "Apoyo moderado",
indice_apoyo >= 0.5 ~ "Bajo apoyo",
TRUE ~ "Sin apoyo"
)
)
# Recodificar las 4 variables usando str_detect() (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
apoyo_2019 <- datos_2019 %>%
mutate(
# Procesar cada pregunta ap42_XX
clases_apoyo = case_when(
str_detect(ap42_01, "Siempre") ~ 3,
str_detect(ap42_01, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_01, "Algunas_veces") ~ 1,
str_detect(ap42_01, "Nunca") ~ 0,
TRUE ~ NA_real_
),
seguimiento_pers = case_when(
str_detect(ap42_02, "Siempre") ~ 3,
str_detect(ap42_02, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_02, "Algunas_veces") ~ 1,
str_detect(ap42_02, "Nunca") ~ 0,
TRUE ~ NA_real_
),
adaptacion_clases = case_when(
str_detect(ap42_03, "Siempre") ~ 3,
str_detect(ap42_03, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_03, "Algunas_veces") ~ 1,
str_detect(ap42_03, "Nunca") ~ 0,
TRUE ~ NA_real_
),
formas_evaluar = case_when(
str_detect(ap42_04, "Siempre") ~ 3,
str_detect(ap42_04, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_04, "Algunas_veces") ~ 1,
str_detect(ap42_04, "Nunca") ~ 0,
TRUE ~ NA_real_
),
# Crear categorías para cada práctica por separado
categoria_seguimiento = case_when(
seguimiento_pers == 3 ~ "Siempre",
seguimiento_pers == 2 ~ "Mayoría veces",
seguimiento_pers == 1 ~ "Algunas veces",
seguimiento_pers == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_clases = case_when(
clases_apoyo == 3 ~ "Siempre",
clases_apoyo == 2 ~ "Mayoría veces",
clases_apoyo == 1 ~ "Algunas veces",
clases_apoyo == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_adaptacion = case_when(
adaptacion_clases == 3 ~ "Siempre",
adaptacion_clases == 2 ~ "Mayoría veces",
adaptacion_clases == 1 ~ "Algunas veces",
adaptacion_clases == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_evaluacion = case_when(
formas_evaluar == 3 ~ "Siempre",
formas_evaluar == 2 ~ "Mayoría veces",
formas_evaluar == 1 ~ "Algunas veces",
formas_evaluar == 0 ~ "Nunca",
TRUE ~ "Sin datos"
)
)
# Recodificar las 4 variables usando str_detect() (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
apoyo_2019 <- datos_2019 %>%
mutate(
# Procesar cada pregunta ap42_XX
clases_apoyo = case_when(
str_detect(contains(ap42_01), "Siempre") ~ 3,
str_detect(contains(ap42_01), "La_mayoria_de_las_veces") ~ 2,
str_detect(contains(ap42_01), "Algunas_veces") ~ 1,
str_detect(contains(ap42_01), "Nunca") ~ 0,
TRUE ~ NA_real_
),
seguimiento_pers = case_when(
str_detect(ap42_02, "Siempre") ~ 3,
str_detect(ap42_02, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_02, "Algunas_veces") ~ 1,
str_detect(ap42_02, "Nunca") ~ 0,
TRUE ~ NA_real_
),
adaptacion_clases = case_when(
str_detect(ap42_03, "Siempre") ~ 3,
str_detect(ap42_03, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_03, "Algunas_veces") ~ 1,
str_detect(ap42_03, "Nunca") ~ 0,
TRUE ~ NA_real_
),
formas_evaluar = case_when(
str_detect(ap42_04, "Siempre") ~ 3,
str_detect(ap42_04, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_04, "Algunas_veces") ~ 1,
str_detect(ap42_04, "Nunca") ~ 0,
TRUE ~ NA_real_
),
# Crear categorías para cada práctica por separado
categoria_seguimiento = case_when(
seguimiento_pers == 3 ~ "Siempre",
seguimiento_pers == 2 ~ "Mayoría veces",
seguimiento_pers == 1 ~ "Algunas veces",
seguimiento_pers == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_clases = case_when(
clases_apoyo == 3 ~ "Siempre",
clases_apoyo == 2 ~ "Mayoría veces",
clases_apoyo == 1 ~ "Algunas veces",
clases_apoyo == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_adaptacion = case_when(
adaptacion_clases == 3 ~ "Siempre",
adaptacion_clases == 2 ~ "Mayoría veces",
adaptacion_clases == 1 ~ "Algunas veces",
adaptacion_clases == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_evaluacion = case_when(
formas_evaluar == 3 ~ "Siempre",
formas_evaluar == 2 ~ "Mayoría veces",
formas_evaluar == 1 ~ "Algunas veces",
formas_evaluar == 0 ~ "Nunca",
TRUE ~ "Sin datos"
)
)
names(datos_2019)[grepl("ap42_01", names(datos_2019))]
# Recodificar las 4 variables usando str_detect() (0=Nunca, 1=Algunas veces, 2=Mayoría veces, 3=Siempre)
apoyo_2019 <- datos_2019 %>%
mutate(
# Procesar cada pregunta ap42_XX
clases_apoyo = case_when(
str_detect(ap42_01_Siempre, "Siempre") ~ 3,
str_detect(ap42_01_La_mayoria_de_las_veces, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_01_Algunas_veces, "Algunas_veces") ~ 1,
str_detect(ap42_01_Blanco, ap42_01_Nunca, "Nunca") ~ 0,
TRUE ~ NA_real_
),
seguimiento_pers = case_when(
str_detect(ap42_02, "Siempre") ~ 3,
str_detect(ap42_02, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_02, "Algunas_veces") ~ 1,
str_detect(ap42_02, "Nunca") ~ 0,
TRUE ~ NA_real_
),
adaptacion_clases = case_when(
str_detect(ap42_03, "Siempre") ~ 3,
str_detect(ap42_03, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_03, "Algunas_veces") ~ 1,
str_detect(ap42_03, "Nunca") ~ 0,
TRUE ~ NA_real_
),
formas_evaluar = case_when(
str_detect(ap42_04, "Siempre") ~ 3,
str_detect(ap42_04, "La_mayoria_de_las_veces") ~ 2,
str_detect(ap42_04, "Algunas_veces") ~ 1,
str_detect(ap42_04, "Nunca") ~ 0,
TRUE ~ NA_real_
),
# Crear categorías para cada práctica por separado
categoria_seguimiento = case_when(
seguimiento_pers == 3 ~ "Siempre",
seguimiento_pers == 2 ~ "Mayoría veces",
seguimiento_pers == 1 ~ "Algunas veces",
seguimiento_pers == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_clases = case_when(
clases_apoyo == 3 ~ "Siempre",
clases_apoyo == 2 ~ "Mayoría veces",
clases_apoyo == 1 ~ "Algunas veces",
clases_apoyo == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_adaptacion = case_when(
adaptacion_clases == 3 ~ "Siempre",
adaptacion_clases == 2 ~ "Mayoría veces",
adaptacion_clases == 1 ~ "Algunas veces",
adaptacion_clases == 0 ~ "Nunca",
TRUE ~ "Sin datos"
),
categoria_evaluacion = case_when(
formas_evaluar == 3 ~ "Siempre",
formas_evaluar == 2 ~ "Mayoría veces",
formas_evaluar == 1 ~ "Algunas veces",
formas_evaluar == 0 ~ "Nunca",
TRUE ~ "Sin datos"
)
)
